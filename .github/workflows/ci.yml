name: CI/CD

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install

      - name: Verify PostgreSQL is running
        run: |
          sudo apt-get install -y postgresql-client
          pg_isready -h localhost -p 5432

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Check if the database is empty and create a baseline if necessary
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          TABLES_COUNT=$(psql $DATABASE_URL -t -c "SELECT count(*) FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';")
          if [ "$TABLES_COUNT" -gt 0 ]; then
            echo "Database is not empty. Creating baseline migration."
            npx prisma migrate diff --from-schema-datasource --to-schema-datamodel --script > prisma/migrations/20240613052051_database_init/migration.sql
            CHECKSUM=$(md5sum prisma/migrations/20240613052051_database_init/migration.sql | cut -d ' ' -f 1)
            psql $DATABASE_URL -c "INSERT INTO _prisma_migrations (id, checksum, finished_at, migration_name, logs, rolled_back_at, applied_steps_count) VALUES ('20240613052051_database_init', '$CHECKSUM', NOW(), '20240613052051_database_init', '', NULL, 1);"
          else
            echo "Database is empty. Proceeding with migrations."
          fi

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: npx prisma migrate deploy --preview-feature

      - name: Run tests
        run: npm test

      - name: Verify generated types are checked in
        run: |
          npx prisma generate
          if ! git diff --ignore-space-at-eol --exit-code --quiet; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    env:
      DATABASE_URL: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && secrets.PRODUCTION_DATABASE_URL || secrets.STAGING_DATABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install

      - name: Ensure database is properly initialized
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL || secrets.STAGING_DATABASE_URL }}
        run: |
          TABLES_COUNT=$(psql $DATABASE_URL -t -c "SELECT count(*) FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';")
          if [ "$TABLES_COUNT" -gt 0 ]; then
            echo "Database is not empty. Ensuring baseline migration is set."
            if [ "$(psql $DATABASE_URL -t -c "SELECT count(*) FROM _prisma_migrations WHERE migration_name = '20240613052051_database_init';")" -eq 0 ]; then
              echo "Baseline migration not found, creating baseline migration."
              npx prisma migrate diff --from-schema-datasource --to-schema-datamodel --script > prisma/migrations/20240613052051_database_init/migration.sql
              CHECKSUM=$(md5sum prisma/migrations/20240613052051_database_init/migration.sql | cut -d ' ' -f 1)
              psql $DATABASE_URL -c "INSERT INTO _prisma_migrations (id, checksum, finished_at, migration_name, logs, rolled_back_at, applied_steps_count) VALUES ('20240613052051_database_init', '$CHECKSUM', NOW(), '20240613052051_database_init', '', NULL, 1);"
            else
              echo "Baseline migration already applied."
            fi
          else
            echo "Database is empty. Proceeding with migrations."
          fi

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          npx prisma generate
          npx prisma migrate deploy --preview-feature

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          npx prisma generate
          npx prisma migrate deploy --preview-feature
