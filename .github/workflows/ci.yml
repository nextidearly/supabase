name: CI

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - closed
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: npx prisma migrate deploy --preview-feature

      - name: Run tests
        run: npm test

      - name: Verify generated types are checked in
        run: |
          npx prisma generate
          if ! git diff --ignore-space-at-eol --exit-code --quiet; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ github.event.pull_request.base.ref == 'main' && secrets.STAGING_DATABASE_URL || secrets.STAGING_DATABASE_URL }}
      PRISMA_CLIENT_ENGINE_TYPE: binary

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install

      - name: Deploy database changes
        run: |
          npx prisma generate
          npx prisma migrate deploy --preview-feature
