name: CI/CD

on:
  push:
    branches:
      # - main
      - staging

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations
        run: npx prisma migrate deploy --preview-feature

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          DATABASE_URL=${{ secrets.STAGING_DB_URL }} npx prisma migrate deploy --preview-feature

      # - name: Deploy to Production
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     DATABASE_URL=${{ secrets.PRODUCTION_DB_URL }} npx prisma migrate deploy --preview-feature
